{"version":3,"file":"load_img.min.js","sources":["../load_img.js"],"sourcesContent":["/**\n *  Load images asynchronously and cache them.\n *\n *  @license MIT\n *  @git https://github.com/duzun/jquery.load_img\n *  @author Dumitru Uzun (DUzun.Me)\n *  @version 1.5.2\n */\n\n// ---------------------------------------------------------------------------\nconst VERSION   = '1.5.2';\n\ninit.VERSION = VERSION;\n\nexport default function init($, global) {\n        if (!global) global = getGlobal();\n\n        var undefined; //jshint ignore:line\n\n        // ---------------------------------------------------------------------------\n        const { document } = global\n        ,   cache = {}\n        ,   errors = {}\n        ;\n\n        /**\n         * Load an image to cache.\n         *\n         * @param string src - source URL of the iamge\n         * @param callback clb.call(img: $(Image), src|false, event: $.Event)\n         *\n         * @return $(Image) element\n         */\n        function load_img(src, options, clb) {\n            if(!clb && typeof options == 'function') {\n                clb = options;\n                options = undefined;\n            }\n\n            options = options ? $.extend({}, load_img.settings, options) : load_img.settings;\n\n            var img = $('<img />')\n            ,   hasClb = 'function' == typeof clb\n            ,   defered = hasClb ? undefined : new $.Deferred()\n            ,   onEvent = function (evt) {\n                    var type = evt.type\n                    ,   error = type == 'error'\n                    ;\n\n                    if (!evt.timeStamp) {\n                        evt.timeStamp = Date.now();\n                    }\n                    evt.src = src;\n                    if(error) {\n                        errors[src] = evt;\n                    }\n                    else {\n                        delete errors[src];\n                    }\n                    cache[src] = !error;\n                    img.off(error ? 'load' : 'error', onEvent).remove();\n                    img.show();\n                    if(hasClb) {\n                        clb.call(img, error?false:src, evt);\n                    }\n                    else if ( defered ) {\n                        if ( error ) {\n                            defered.reject(evt);\n                        }\n                        else {\n                            defered.resolve(evt, src);\n                        }\n                    }\n                }\n            ,   that = this\n            ,   ctx = that && that != $ && that.$ctx\n            ;\n\n            if ( defered ) {\n                defered.promise(img);\n            }\n\n            img\n                .hide()\n                .one('load', onEvent)\n                .one('error', onEvent)\n            ;\n\n            let errorEvt = errors[src];\n            const { errorExpires } = options;\n            if (errorEvt && errorExpires && errorExpires < Date.now() - errorEvt.timeStamp) {\n                errorEvt = undefined;\n            }\n\n            if (errorEvt) {\n                img.prop('src', src).trigger(errorEvt);\n            }\n            else {\n                if(!ctx || !ctx.length || ctx[0] == document) {\n                    ctx = $(document.body||'body');\n                }\n                if(!ctx.length) {\n                    var tio = setInterval(function () {\n                        if(document.body) {\n                            clearInterval(tio);\n                            ctx = $(document.body);\n                            img.prop('src', src);\n                            ctx.append(img);\n                        }\n                    }, 50);\n                }\n                else {\n                    img.prop('src', src);\n                    ctx.append(img);\n                }\n            }\n            return img;\n        }\n\n        /**\n         * Check whether src has beed loaded (either success or error)\n         *\n         * @param string src - source URL of the iamge\n         *\n         * @return bool true if src in cache, false otherwise\n         */\n        function inCache(src) {\n            return src in cache;\n        }\n\n        /**\n         * Check whether image with src exists.\n         *\n         * @param string src - source URL of the iamge\n         * @param callback cb(src|false)\n         *\n         * Note: If cb supplied and src not in cache, it will trigger\n         *\n         * @return bool|undefined true if exists (and cached), false if doesn't exist (error on load), undefined if never loaded (not in cache)\n         */\n        function exists(src, cb) {\n            if ( src in cache ) {\n                cb && cb(cache[src]&&src);\n                return cache[src];\n            }\n            else {\n                cb && load_img(src, cb);\n            }\n        }\n\n        function loadSrc(src, options) {\n\n            if (exists(src)) {\n                let defered = $.Deferred();\n                let promise = defered.promise();\n                defered.resolve(src);\n                return promise;\n            }\n\n            return load_img(src, options)\n            .then((evt) => {\n                const { src, target } = evt;\n                return src || target && target.src;\n            });\n        }\n\n        function isImgOk(img) {\n            if ( !img.complete ) return false; /* Only IE is correct here */\n            if ( typeof img.naturalWidth != 'undefined' && img.naturalWidth == 0 ) return false; /* Other Browsers */\n            return true; /* No other way of checking: assume it's ok. */\n        }\n\n        /**\n         * Purce the cache.\n         */\n        function purgeCache() {\n            $.each(cache, function (n,v) {\n                delete cache[n];\n            });\n\n            $.each(errors, function (n,v) {\n                delete errors[n];\n            });\n        }\n\n        // Export\n\n        load_img.exists      = exists;\n        load_img.src         = loadSrc;\n        load_img.inCache     = load_img.in_cache    = inCache;\n        load_img.isImgOk     = load_img.is_ok       = isImgOk;\n        load_img.purgeCache  = load_img.purge_cache = purgeCache;\n\n        load_img.cache       = cache;\n        load_img.errors      = errors;\n        load_img.VERSION     = VERSION;\n\n        load_img.settings = {\n            errorExpires: 1e3, // after how many milliseconds to allow to retry loading an image which errored\n        };\n\n        return $.load_img = load_img;\n}\n\nfunction getGlobal() {\n    return typeof globalThis != 'undefined' ? globalThis : typeof window != 'undefined' ? window : global;\n}\n\n;(function (global) {\n    const $ = global.jQuery || global.Zepto;\n    if ($) init($, global);\n}(getGlobal()));\n"],"names":["VERSION","init","$","global","undefined","getGlobal","document","cache","errors","load_img","src","options","clb","extend","settings","img","hasClb","defered","Deferred","onEvent","evt","error","type","timeStamp","Date","now","off","remove","show","call","reject","resolve","that","this","ctx","$ctx","promise","hide","one","errorEvt","errorExpires","prop","trigger","length","body","append","tio","setInterval","clearInterval","exists","cb","then","target","inCache","in_cache","isImgOk","is_ok","complete","naturalWidth","purgeCache","purge_cache","each","n","v","globalThis","window","jQuery","Zepto"],"mappings":"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"}