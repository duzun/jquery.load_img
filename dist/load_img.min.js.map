{"version":3,"file":"load_img.min.js","sources":["../load_img.js"],"sourcesContent":["/**\n *  Load images asynchronously and cache them.\n *\n *  @license MIT\n *  @git https://github.com/duzun/jquery.load_img\n *  @author Dumitru Uzun (DUzun.Me)\n *  @version 1.5.0\n */\n\n// ---------------------------------------------------------------------------\nconst VERSION   = '1.5.0';\n\ninit.VERSION = VERSION;\n\nexport default function init($, global) {\n    global = typeof globalThis != 'undefined' ? globalThis : window;\n\n        var undefined; //jshint ignore:line\n\n        // ---------------------------------------------------------------------------\n        const { document } = global\n        ,   cache = {}\n        ,   errors = {}\n        ;\n\n        /**\n         * Load an image to cache.\n         *\n         * @param string src - source URL of the iamge\n         * @param callback clb.call(img: $(Image), src|false, event: $.Event)\n         *\n         * @return $(Image) element\n         */\n        function load_img(src, clb) {\n            var img = $('<img />')\n            ,   hasClb = 'function' == typeof clb\n            ,   defered = hasClb ? undefined : new $.Deferred()\n            ,   onEvent = function (evt) {\n                    var type = evt.type\n                    ,   error = type == 'error'\n                    ;\n\n                    if (!evt.timeStamp) {\n                        evt.timeStamp = Date.now();\n                    }\n                    evt.src = src;\n                    if(error) {\n                        errors[src] = evt;\n                    }\n                    else {\n                        delete errors[src];\n                    }\n                    cache[src] = !error;\n                    img.off(error ? 'load' : 'error', onEvent).remove();\n                    img.show();\n                    if(hasClb) {\n                        clb.call(img, error?false:src, evt);\n                    }\n                    else if ( defered ) {\n                        if ( error ) {\n                            defered.reject(evt);\n                        }\n                        else {\n                            defered.resolve(evt, src);\n                        }\n                    }\n                }\n            ,   that = this\n            ,   ctx = that && that != $ && that.$ctx\n            ;\n\n            if ( defered ) {\n                img.then = $.proxy(defered.then, defered);\n                img.promise = $.proxy(defered.promise, defered);\n            }\n\n            img\n                .hide()\n                .one('load', onEvent)\n                .one('error', onEvent)\n            ;\n\n            let errorEvt = errors[src];\n            const { errorExpires } = load_img.settings;\n            if (errorEvt && errorExpires && errorExpires < Date.now() - errorEvt.timeStamp) {\n                errorEvt = undefined;\n            }\n\n            if (errorEvt) {\n                img.prop('src', src).trigger(errorEvt);\n            }\n            else {\n                if(!ctx || !ctx.length || ctx[0] == document) {\n                    ctx = $(document.body||'body');\n                }\n                if(!ctx.length) {\n                    var tio = setInterval(function () {\n                        if(document.body) {\n                            clearInterval(tio);\n                            ctx = $(document.body);\n                            img.prop('src', src);\n                            ctx.append(img);\n                        }\n                    }, 50);\n                }\n                else {\n                    img.prop('src', src);\n                    ctx.append(img);\n                }\n            }\n            return img;\n        }\n\n        /**\n         * Check whether src has beed loaded (either success or error)\n         *\n         * @param string src - source URL of the iamge\n         *\n         * @return bool true if src in cache, false otherwise\n         */\n        function inCache(src) {\n            return src in cache;\n        }\n\n        /**\n         * Check whether image with src exists.\n         *\n         * @param string src - source URL of the iamge\n         * @param callback cb(src|false)\n         *\n         * Note: If cb supplied and src not in cache, it will trigger\n         *\n         * @return bool|undefined true if exists (and cached), false if doesn't exist (error on load), undefined if never loaded (not in cache)\n         */\n        function exists(src, cb) {\n            if ( src in cache ) {\n                cb && cb(cache[src]&&src);\n                return cache[src];\n            }\n            else {\n                cb && load_img(src, cb);\n            }\n        }\n\n        function isImgOk(img) {\n            if ( !img.complete ) return false; /* Only IE is correct here */\n            if ( typeof img.naturalWidth != 'undefined' && img.naturalWidth == 0 ) return false; /* Other Browsers */\n            return true; /* No other way of checking: assume it's ok. */\n        }\n\n        /**\n         * Purce the cache.\n         */\n        function purgeCache() {\n            $.each(cache, function (n,v) {\n                delete cache[n];\n            });\n\n            $.each(errors, function (n,v) {\n                delete errors[n];\n            });\n        }\n\n        // Export\n\n        load_img.exists      = exists;\n        load_img.inCache     = load_img.in_cache    = inCache;\n        load_img.isImgOk     = load_img.is_ok       = isImgOk;\n        load_img.purgeCache  = load_img.purge_cache = purgeCache;\n\n        load_img.cache       = cache;\n        load_img.errors      = errors;\n        load_img.VERSION     = VERSION;\n\n        load_img.settings = {\n            errorExpires: 1e3, // after how many milliseconds to allow to retry loading an image which errored\n        };\n\n        return $.load_img = load_img;\n}\n\n;(function (global) {\n    const $ = global.jQuery || global.Zepto;\n    if ($) init($, global);\n}(typeof globalThis != 'undefined' ? globalThis : typeof window != 'undefined' ? window : global));\n"],"names":["VERSION","init","$","global","undefined","document","globalThis","window","cache","errors","load_img","src","clb","img","hasClb","defered","Deferred","onEvent","evt","error","type","timeStamp","Date","now","off","remove","show","call","reject","resolve","that","this","ctx","$ctx","then","proxy","promise","hide","one","errorEvt","errorExpires","settings","prop","trigger","length","body","append","tio","setInterval","clearInterval","exists","cb","inCache","in_cache","isImgOk","is_ok","complete","naturalWidth","purgeCache","purge_cache","each","n","v","jQuery","Zepto"],"mappings":";;;;;;;;OAUA,IAAMA,EAAY,QAIH,SAASC,EAAKC,EAAGC,GAGxB,IAAIC,EAGIC,GALkB,oBAAdC,WAA4BA,WAAaC,QAK7CF,SACJG,EAAQ,GACRC,EAAS,GAWb,SAASC,EAASC,EAAKC,GACnB,IAAIC,EAAMX,EAAE,WACRY,EAAS,mBAAqBF,EAC9BG,EAAUD,EAASV,EAAY,IAAIF,EAAEc,SACrCC,EAAU,SAAVA,EAAoBC,GAChB,IACIC,EAAgB,SADTD,EAAIE,KAIVF,EAAIG,YACLH,EAAIG,UAAYC,KAAKC,OAEzBL,EAAIP,IAAMA,EACPQ,EACCV,EAAOE,GAAOO,SAGPT,EAAOE,GAElBH,EAAMG,IAAQQ,EACdN,EAAIW,IAAIL,EAAQ,OAAS,QAASF,GAASQ,SAC3CZ,EAAIa,OACDZ,EACCF,EAAIe,KAAKd,GAAKM,GAAYR,EAAKO,GAEzBH,IACDI,EACDJ,EAAQa,OAAOV,GAGfH,EAAQc,QAAQX,EAAKP,KAIjCmB,EAAOC,KACPC,EAAMF,GAAQA,GAAQ5B,GAAK4B,EAAKG,KAG/BlB,IACDF,EAAIqB,KAAOhC,EAAEiC,MAAMpB,EAAQmB,KAAMnB,GACjCF,EAAIuB,QAAUlC,EAAEiC,MAAMpB,EAAQqB,QAASrB,IAG3CF,EACKwB,OACAC,IAAI,OAAQrB,GACZqB,IAAI,QAASrB,GAGlB,IAAIsB,EAAW9B,EAAOE,GACd6B,EAAiB9B,EAAS+B,SAA1BD,aAKR,GAJID,GAAYC,GAAgBA,EAAelB,KAAKC,MAAQgB,EAASlB,YACjEkB,EAAWnC,GAGXmC,EACA1B,EAAI6B,KAAK,MAAO/B,GAAKgC,QAAQJ,QAM7B,GAHIP,GAAQA,EAAIY,QAAUZ,EAAI,IAAM3B,IAChC2B,EAAM9B,EAAEG,EAASwC,MAAM,SAEvBb,EAAIY,OAWJ/B,EAAI6B,KAAK,MAAO/B,GAChBqB,EAAIc,OAAOjC,QAXX,IAAIkC,EAAMC,aAAY,WACf3C,EAASwC,OACRI,cAAcF,GACdf,EAAM9B,EAAEG,EAASwC,MACjBhC,EAAI6B,KAAK,MAAO/B,GAChBqB,EAAIc,OAAOjC,MAEhB,IAOX,OAAOA,EAoEX,OAbAH,EAASwC,OA/BT,SAAgBvC,EAAKwC,GACjB,GAAKxC,KAAOH,EAER,OADA2C,GAAMA,EAAG3C,EAAMG,IAAMA,GACdH,EAAMG,GAGbwC,GAAMzC,EAASC,EAAKwC,IA0B5BzC,EAAS0C,QAAc1C,EAAS2C,SA9ChC,SAAiB1C,GACb,OAAOA,KAAOH,GA8ClBE,EAAS4C,QAAc5C,EAAS6C,MAvBhC,SAAiB1C,GACb,QAAMA,EAAI2C,gBACsB,IAApB3C,EAAI4C,cAAmD,GAApB5C,EAAI4C,eAsBvD/C,EAASgD,WAAchD,EAASiD,YAfhC,WACIzD,EAAE0D,KAAKpD,GAAO,SAAUqD,EAAEC,UACftD,EAAMqD,MAGjB3D,EAAE0D,KAAKnD,GAAQ,SAAUoD,EAAEC,UAChBrD,EAAOoD,OAWtBnD,EAASF,MAAcA,EACvBE,EAASD,OAAcA,EACvBC,EAASV,QAAcA,EAEvBU,EAAS+B,SAAW,CAChBD,aAAc,KAGXtC,EAAEQ,SAAWA,SAtK5BT,EAAKD,QAAUA,EAyKb,SAAUG,GACR,IAAMD,EAAIC,EAAO4D,QAAU5D,EAAO6D,MAC9B9D,GAAGD,EAAKC,GAFd,CAGqB,oBAAdI,WAA4BA,WAA8B,oBAAVC,OAAwBA,OAASJ"}