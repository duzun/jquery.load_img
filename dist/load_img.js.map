{"version":3,"file":"load_img.js","sources":["../load_img.js"],"sourcesContent":["/**\n *  Load images asynchronously and cache them.\n *\n *  @license MIT\n *  @git https://github.com/duzun/jquery.load_img\n *  @author Dumitru Uzun (DUzun.Me)\n *  @version 1.6.0\n */\n\n// ---------------------------------------------------------------------------\nconst VERSION   = '1.6.0';\n\ninit.VERSION = VERSION;\n\nexport default function init($, global) {\n        if (!global) global = getGlobal();\n\n        var undefined; //jshint ignore:line\n\n        // ---------------------------------------------------------------------------\n        const { document } = global\n        ,   cache = {}\n        ,   errors = {}\n        ;\n\n        /**\n         * Load an image to cache.\n         *\n         * @param string src - source URL of the iamge\n         * @param callback clb.call(img: $(Image), src|false, event: $.Event)\n         *\n         * @return $(Image) element\n         */\n        function load_img(src, options, clb) {\n            if(!clb && typeof options == 'function') {\n                clb = options;\n                options = undefined;\n            }\n\n            options = options ? $.extend({}, load_img.settings, options) : load_img.settings;\n            const { errorExpires, decode } = options;\n\n            var img = $('<img />')\n            ,   hasClb = 'function' == typeof clb\n            ,   defered = hasClb ? undefined : new $.Deferred()\n            ,   onEvent = function (evt) {\n                    var type = evt.type\n                    ,   error = type == 'error'\n                    ;\n\n                    if (!evt.timeStamp) {\n                        evt.timeStamp = Date.now();\n                    }\n                    evt.src = src;\n                    if(error) {\n                        errors[src] = evt;\n                    }\n                    else {\n                        delete errors[src];\n                    }\n                    cache[src] = !error;\n                    img.off(error ? 'load' : 'error', onEvent).remove();\n                    img.show();\n                    if(hasClb) {\n                        if (decode && !error && img[0].decode) {\n                            img[0].decode()\n                            .then(\n                                () => clb.call(img, src, evt),\n                                (error) => {\n                                    evt.reason = error;\n                                    clb.call(img, false, evt);\n                                }\n                            );\n                        }\n                        else {\n                            clb.call(img, error?false:src, evt);\n                        }\n                    }\n                    else if ( defered ) {\n                        if ( error ) {\n                            defered.reject(evt);\n                        }\n                        else {\n                            if (decode && img[0].decode) {\n                                img[0].decode().then(() => defered.resolve(evt, src), defered.reject);\n                            }\n                            else {\n                                defered.resolve(evt, src);\n                            }\n                        }\n                    }\n                }\n            ,   that = this\n            ,   ctx = that && that != $ && that.$ctx\n            ;\n\n            if ( defered ) {\n                defered.promise(img);\n            }\n\n            img\n                .hide()\n                .one('load', onEvent)\n                .one('error', onEvent)\n            ;\n\n            let errorEvt = errors[src];\n            if (errorEvt && errorExpires && errorExpires < Date.now() - errorEvt.timeStamp) {\n                errorEvt = undefined;\n            }\n\n            if (errorEvt) {\n                img.prop('src', src).trigger(errorEvt);\n            }\n            else {\n                if(!ctx || !ctx.length || ctx[0] == document) {\n                    ctx = $(document.body||'body');\n                }\n                if(!ctx.length) {\n                    var tio = setInterval(function () {\n                        if(document.body) {\n                            clearInterval(tio);\n                            ctx = $(document.body);\n                            img.prop('src', src);\n                            ctx.append(img);\n                        }\n                    }, 50);\n                }\n                else {\n                    img.prop('src', src);\n                    ctx.append(img);\n                }\n            }\n            return img;\n        }\n\n        /**\n         * Check whether src has beed loaded (either success or error)\n         *\n         * @param string src - source URL of the iamge\n         *\n         * @return bool true if src in cache, false otherwise\n         */\n        function inCache(src) {\n            return src in cache;\n        }\n\n        /**\n         * Check whether image with src exists.\n         *\n         * @param string src - source URL of the iamge\n         * @param callback cb(src|false)\n         *\n         * Note: If cb supplied and src not in cache, it will trigger\n         *\n         * @return bool|undefined true if exists (and cached), false if doesn't exist (error on load), undefined if never loaded (not in cache)\n         */\n        function exists(src, cb) {\n            if ( src in cache ) {\n                cb && cb(cache[src]&&src);\n                return cache[src];\n            }\n            else {\n                cb && load_img(src, cb);\n            }\n        }\n\n        /**\n         * Get just the src of the image after preloading it.\n         *\n         * If the image is already preloaded, just resolve with the src.\n         *\n         * @param {string} src\n         * @param {object} options\n         * @returns {Promise<string>}\n         */\n        function loadSrc(src, options) {\n\n            if (exists(src)) {\n                let defered = $.Deferred();\n                let promise = defered.promise();\n                defered.resolve(src);\n                return promise;\n            }\n\n            return load_img(src, options)\n            .then((evt) => {\n                const { src, target } = evt;\n                return src || target && target.src;\n            });\n        }\n\n        function isImgOk(img) {\n            if ( !img.complete ) return false; /* Only IE is correct here */\n            if ( typeof img.naturalWidth != 'undefined' && img.naturalWidth == 0 ) return false; /* Other Browsers */\n            return true; /* No other way of checking: assume it's ok. */\n        }\n\n        /**\n         * Purce the cache.\n         */\n        function purgeCache() {\n            $.each(cache, function (n,v) {\n                delete cache[n];\n            });\n\n            $.each(errors, function (n,v) {\n                delete errors[n];\n            });\n        }\n\n        // Export\n\n        load_img.exists      = exists;\n        load_img.src         = loadSrc;\n        load_img.inCache     = load_img.in_cache    = inCache;\n        load_img.isImgOk     = load_img.is_ok       = isImgOk;\n        load_img.purgeCache  = load_img.purge_cache = purgeCache;\n\n        load_img.cache       = cache;\n        load_img.errors      = errors;\n        load_img.VERSION     = VERSION;\n\n        load_img.settings = {\n            errorExpires: 1e3, // after how many milliseconds to allow to retry loading an image which errored\n            decode: !!Image.prototype.decode, // wait for decode after loading the image\n        };\n\n        return $.load_img = load_img;\n}\n\nfunction getGlobal() {\n    return typeof globalThis != 'undefined' ? globalThis : typeof window != 'undefined' ? window : global;\n}\n\n;(function (global) {\n    const $ = global.jQuery || global.Zepto;\n    if ($) init($, global);\n}(getGlobal()));\n"],"names":["VERSION","init","$","global","getGlobal","undefined","document","cache","errors","load_img","src","options","clb","extend","settings","errorExpires","decode","img","hasClb","defered","Deferred","onEvent","evt","type","error","timeStamp","Date","now","off","remove","show","then","call","reason","reject","resolve","that","ctx","$ctx","promise","hide","one","errorEvt","prop","trigger","length","body","tio","setInterval","clearInterval","append","inCache","exists","cb","loadSrc","target","isImgOk","complete","naturalWidth","purgeCache","each","n","v","in_cache","is_ok","purge_cache","Image","prototype","globalThis","window","jQuery","Zepto"],"mappings":"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"}